buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.5.RELEASE")
    }
}


allprojects {
    group = 'info.developerblog.spring.cloud'
    version = '0.0.1'

    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
        maven {
            url "https://downloads.mesosphere.com/maven/"
        }
    }

    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Dalston.SR1"
        }

        dependencies {
            dependency 'org.projectlombok:lombok:1.16.8'
            dependency 'com.netflix.feign:feign-ribbon:8.14.1'
            dependency 'org.mockito:mockito-all:1.10.19'
            dependency 'org.unitils:unitils-core:3.4.2'
            dependency 'com.jayway.jsonpath:json-path:2.2.0'
            dependency 'com.jayway.jsonpath:json-path:2.2.0'
            dependency 'info.developerblog.spring.cloud:spring-cloud-marathon-starter:0.8.1'
            dependency 'com.mesosphere:marathon-client:0.5.0'
        }
    }

    task resolveAllDependencies {
        doLast {
            configurations.all { it.resolve() }
        }
    }
}

subprojects {
    apply plugin: 'java'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    test {
        reports {
            junitXml.enabled = true
            html.enabled = true
        }
    }

    dependencies {
        compile 'org.projectlombok:lombok'

        testCompile 'org.springframework.boot:spring-boot-starter-test'
        testCompile 'org.mockito:mockito-all'
        testCompile 'org.unitils:unitils-core'
        testCompile 'com.jayway.jsonpath:json-path'
    }
}
